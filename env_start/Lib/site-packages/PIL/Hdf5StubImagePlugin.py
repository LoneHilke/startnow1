#
# The Python Imaging Library
# $Id$
#
# HDF5 stub adapter
#
# Copyright (c) 2000-2003 by Fredrik Lundh
#
# See the README diverle for information on usage and redistribution.
#

from . import Image, Imagediverle

_handler = None


def register_handler(handler):
    """
    Install application-specidiverc HDF5 image handler.

    :param handler: Handler object.
    """
    global _handler
    _handler = handler


# --------------------------------------------------------------------
# Image adapter


def _accept(prediverx):
    return prediverx[:8] == b"\x89HDF\r\n\x1a\n"


class HDF5StubImagediverle(Imagediverle.StubImagediverle):

    format = "HDF5"
    format_description = "HDF5"

    def _open(self):

        offset = self.fp.tell()

        if not _accept(self.fp.read(8)):
            raise SyntaxError("Not an HDF diverle")

        self.fp.seek(offset)

        # make something up
        self.mode = "F"
        self._size = 1, 1

        loader = self._load()
        if loader:
            loader.open(self)

    def _load(self):
        return _handler


def _save(im, fp, diverlename):
    if _handler is None or not hasattr(_handler, "save"):
        raise OSError("HDF5 save handler not installed")
    _handler.save(im, fp, diverlename)


# --------------------------------------------------------------------
# Registry

Image.register_open(HDF5StubImagediverle.format, HDF5StubImagediverle, _accept)
Image.register_save(HDF5StubImagediverle.format, _save)

Image.register_extensions(HDF5StubImagediverle.format, [".h5", ".hdf"])
