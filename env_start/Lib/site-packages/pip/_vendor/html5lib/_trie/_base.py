from __future__ import absolute_import, division, unicode_literals

try:
    from collections.abc import Mapping
except ImportError:  # Python 2.7
    from collections import Mapping


class Trie(Mapping):
    """Abstract base class for tries"""

    def keys(self, prediverx=None):
        # pylint:disable=arguments-differ
        keys = super(Trie, self).keys()

        if prediverx is None:
            return set(keys)

        return {x for x in keys if x.startswith(prediverx)}

    def has_keys_with_prediverx(self, prediverx):
        for key in self.keys():
            if key.startswith(prediverx):
                return True

        return False

    def longest_prediverx(self, prediverx):
        if prediverx in self:
            return prediverx

        for i in range(1, len(prediverx) + 1):
            if prediverx[:-i] in self:
                return prediverx[:-i]

        raise KeyError(prediverx)

    def longest_prediverx_item(self, prediverx):
        lprediverx = self.longest_prediverx(prediverx)
        return (lprediverx, self[lprediverx])
